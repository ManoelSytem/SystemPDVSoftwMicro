/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Servico.Prototypos;
import business.ClienteBS;
import business.VendaBS;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Iterator;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Cliente;
import modelo.VendaModel;

/**
 *
 * @author IBBN
 */
public class ListadeClientes extends javax.swing.JFrame {
         String idClienteSelecionado;
         String ClienteSelecionado;
         Venda cliSel;
         ListadeVendaCliente  exibirvendascliente = new ListadeVendaCliente();
         boolean ativamuseclik = false;
        TableRowSorter<TableModel> sorterG;
        DateFormat df = DateFormat.getDateInstance(DateFormat.FULL,new Locale("pt","br"));
    /**
     * Creates new form ListadeClientes
     */
    public ListadeClientes() {
          initComponents();
          CarregarGrid();
          buscaCliente.setText("Digite o Nome do Cliente...");
          jButtonSelecionarCliente.setVisible(false);
          
       InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
       inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), "forward");
       this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
       this.getRootPane().getActionMap().put("forward", new AbstractAction() {
           private static final long serialVersionUID = 1L;
           @Override
          public void actionPerformed(ActionEvent arg0) {
               Prototypos proty = new Prototypos();
              Iterator  itVendasMig  = null;
             VendaBS vendaBSMigracao = new VendaBS();
               try {
                   itVendasMig = vendaBSMigracao.ObterVendas();
               } catch (Exception ex) {
                   Logger.getLogger(ListadeClientes.class.getName()).log(Level.SEVERE, null, ex);
               }
               try {
                  jLabel1.setText(proty.MigracaoDataHoraVenda(vendaBSMigracao,itVendasMig));
               } catch (ParseException ex) {
                   Logger.getLogger(ListadeClientes.class.getName()).log(Level.SEVERE, null, ex);
               }
          }
      });
     
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buscaCliente = new javax.swing.JTextField();
        jButtonExlcuir = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonSelecionarCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Clientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Status", "Cpf", "Endere√ßo", "Telefone", "Data de Cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        buscaCliente.setToolTipText("");
        buscaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscaClienteMouseClicked(evt);
            }
        });
        buscaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscaClienteKeyPressed(evt);
            }
        });

        jButtonExlcuir.setBackground(new java.awt.Color(255, 0, 0));
        jButtonExlcuir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonExlcuir.setText("Excluir");
        jButtonExlcuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExlcuirActionPerformed(evt);
            }
        });

        jButton2.setText("Atualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonSelecionarCliente.setBackground(new java.awt.Color(255, 0, 0));
        jButtonSelecionarCliente.setText("Ok");
        jButtonSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Clientes em Vermelho, Pendente.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(64, 64, 64)
                        .addComponent(buscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29))))
            .addGroup(layout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(jButtonSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(jButtonExlcuir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExlcuir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        CarregarGrid();
        buscarClienteKey("");
        buscaCliente.setText("Digite o Nome do Cliente...");
        CarregarGrid();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarClienteActionPerformed
        // TODO add your handling code here:
        
        if (idClienteSelecionado == null) {
            JOptionPane.showMessageDialog(this, "Selecione um cliente com duplo clique");
        } else {
            JOptionPane.showMessageDialog(this, "Cliente Selecionado : " +ClienteSelecionado);
            dispose();
        }
    }//GEN-LAST:event_jButtonSelecionarClienteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    if(evt.getClickCount()>1){
    
    idClienteSelecionado = (String) jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0);
    ClienteSelecionado = (String) jTable1.getModel().getValueAt(jTable1.getSelectedRow(),1);
    buscaCliente.setText((String) jTable1.getModel().getValueAt(jTable1.getSelectedRow(),1)); 

    if (jTable1.getRowSorter() != null){
    int rowSel = jTable1.getSelectedRow();
    int indexRowModel = jTable1.getRowSorter().convertRowIndexToModel(rowSel);
     buscaCliente.setText((String) jTable1.getModel().getValueAt(indexRowModel,1));
     ClienteSelecionado = (String) jTable1.getModel().getValueAt(indexRowModel,1);
     idClienteSelecionado = (String) jTable1.getModel().getValueAt(indexRowModel,0);
    }
  
     if(ativamuseclik == true){
            exibirvendascliente.setVisible(true);
            exibirvendascliente.setAlwaysOnTop(true);
            exibirvendascliente.CarregarGridVenda(buscaCliente.getText(),idClienteSelecionado);
            exibirvendascliente.limpar();
       }
     }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonExlcuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExlcuirActionPerformed
        // TODO add your handling code here:
        int dialogResult;
        if (idClienteSelecionado == null) {
            JOptionPane.showMessageDialog(this, "Selecione um cliente com duplo clique");
        } else {
            ClienteBS excluirCliente = new ClienteBS();
            Cliente ex = new Cliente();
            ex.setCodCliente(Integer.parseInt(idClienteSelecionado));

            try {
                boolean retorno = excluirCliente.VerificarCompraPendenteCliente(ex.getCodCliente());
                Cliente Cliente = new Cliente();
                Cliente.ValidaSeCompraExiste(retorno);
                dialogResult = JOptionPane.showConfirmDialog(this, "Deseja Excluir o Cliente,\n C√≥digo : " + idClienteSelecionado
                        + "\n Nome : " + buscaCliente.getText()
                        + "\nConfirma a Exclus√£o ?", "Confirma√ß√£o de Exclus√£o de Cliente", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    excluirCliente.ExcluirCliente(ex);
                    JOptionPane.showMessageDialog(this, ex.getMensagem());
                    CarregarGrid();
                    buscaCliente.setText("");
                    idClienteSelecionado = null;
                } else {
                    idClienteSelecionado = null;
                }
            } catch (Exception ex1) {
                JOptionPane.showMessageDialog(this,ex1);
            }

        }
       
    }//GEN-LAST:event_jButtonExlcuirActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
         exibirvendascliente.dispose();
         ativamuseclik = false;
         buscarClienteKey("");
        
    }//GEN-LAST:event_formWindowClosed

    private void buscaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaClienteKeyPressed
        // TODO add your handling code here:
         buscarClienteKey(buscaCliente.getText().toUpperCase());
    }//GEN-LAST:event_buscaClienteKeyPressed
    
    private void buscarClienteKey(String text){
    
    DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
         sorterG = new TableRowSorter<TableModel>(modelo);
         jTable1.setRowSorter(sorterG);
         
       if (text.length()==0){
            sorterG.setRowFilter(null);
        }else{
            try{
                sorterG.setRowFilter(RowFilter.regexFilter("(?i)"+text, 1));
                CarregarGrid();
            }catch (PatternSyntaxException pse){
                System.out.print("Erro");
            }
        }
    }
    private void buscaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscaClienteMouseClicked
        // TODO add your handling code here:
        buscaCliente.setText("");
    }//GEN-LAST:event_buscaClienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new ListadeClientes().setVisible(true);
             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField buscaCliente;
    private javax.swing.JButton jButton2;
    public javax.swing.JButton jButtonExlcuir;
    public javax.swing.JButton jButtonSelecionarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
public void CarregarGrid(){
    
    
    while (jTable1.getModel().getRowCount() > 0) {  
           ((DefaultTableModel) jTable1.getModel()).removeRow(0);  
       } 
          
       try{      
            DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
           
            Iterator itCliente = null;
            ClienteBS ClinteBS = new  ClienteBS();
            itCliente = ClinteBS.ListadeClientes();
            
           
            while (itCliente.hasNext()){
             Cliente Clienteaux = (Cliente) itCliente.next();
             modelo.addRow(new String []{String.valueOf(Clienteaux.getCodCliente()),String.valueOf(Clienteaux.getNome()),"",Clienteaux.getCpf(),Clienteaux.getEndereco(), 
             Clienteaux.getTelefone(), Clienteaux.getDatadeCadastro()});
      
            }     
            
           
            //Criando a cor para linha 
            // comparando cliente com jtable
            String venda = "A Prazo";
            Iterator  itVendas  = null;
            Boolean ClienteAtrasado;
            VendaBS vendaBS = new VendaBS();
            itVendas = vendaBS.ListaVendas(venda);
            Selectvoid();
            for (Iterator iterator = itVendas; iterator.hasNext();) {
                VendaModel next = (VendaModel) iterator.next();
                for (int linha = 0; linha < jTable1.getRowCount(); linha++) {
                    String valorColuna = (String) jTable1.getModel().getValueAt(linha, 0); //0=coluna;
                    if (Integer.parseInt(valorColuna) == next.getCodCliente()) {// Verifica se os cliente na lista da Grid S√£o iguais aos cliente retornados pedentes, se sim seleciona
                        jTable1.addRowSelectionInterval(linha, linha);
                           Long Dias = Prototypos.ObterNumerosDeDiasEntreDatas(next.getHoraDaVenda());
                           ClienteAtrasado = VendaBS.VerificaClienteAtrasado(Dias);
                           ClienteAtrasado(ClienteAtrasado,Dias,linha);
                    }     
                    
                }
            }
            
             
         } catch (Exception e) {
        }

    }

      public void Selectvoid(){
        jTable1.setFillsViewportHeight(true);
        jTable1.setRowSelectionAllowed(true);
        jTable1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.setSelectionBackground(Color.red);
      }

    private void ClienteAtrasado(boolean ClienteAtrasado, Long dias, int linha) {
        if(ClienteAtrasado == true){
           jTable1.getModel().setValueAt("Atrasado "+dias+" Dias", linha, 2);
        }
    }
}
